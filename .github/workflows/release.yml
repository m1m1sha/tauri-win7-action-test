name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - dev

env:
  CARGO_TERM_COLOR: always


jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip == 'true' && !startsWith(github.ref_name, 'v') }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: same_content_newer
          skip_after_successful_duplicate: 'true'
          cancel_others: 'true'
          paths_ignore: '["**/README.md", ".vscode/**"]'
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            build_target: x86_64-win7-windows-msvc
            args: -- -Z build-std
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
          components: rust-src

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: bun install # change this to npm or pnpm depending on which one you use.

      - name: Install dependencies (windows-7 only)
        run: |
          ./.github/workflows/win7.ps1 -file .github/workflows/windows.0.48.5.lib
        shell: powershell

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          releaseBody: See the assets to download this version å’Œ install.
          releaseDraft: true
          prerelease: false
          args: --verbose ${{ matrix.args }} --target ${{ matrix.build_target != '' && matrix.build_target || matrix.target }}
